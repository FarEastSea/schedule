
name: Renew APP

run-name: Renew App from ${{ inputs.deploy_target }} by @${{ github.actor }}

on:
  schedule:
    - cron: '0 0 * */1 *'
  workflow_dispatch:

jobs:
  Renew_Web_APP:
    name: Update Web APP
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: 'Set up Python'
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
          cache: 'pip'

      - name: 'Install requirements'
        run: |
          pip install -r requirements.txt

      - name: Install ChromeDriver
        run: |
          # 不用了，提出来，以后或许用得上
          # && CHROMEDRIVER_RELEASE=$(curl --location --fail --retry 3 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION}) \
          CHROME_VERSION=$(google-chrome --version | cut -f 3 -d ' ') \
            && CHROMEDRIVER_RELEASE=${CHROME_VERSION} \
            && curl --silent --show-error --location --fail --retry 3 --output /tmp/chromedriver_linux64.zip "https://storage.googleapis.com/chrome-for-testing-public/$CHROMEDRIVER_RELEASE/linux64/chromedriver-linux64.zip" \
            && cd /tmp \
            && unzip chromedriver_linux64.zip \
            && rm -rf chromedriver_linux64.zip \
            && sudo mv chromedriver-linux64 /usr/local/bin/chromedriver \
            && sudo chmod +x /usr/local/bin/chromedriver \
            && chromedriver --version

      - name: Renew app
        env:
          WEBAPP_USERNAME: ${{ secrets.WEBAPP_USERNAME }}
          WEBAPP_PASSWORD: ${{ secrets.WEBAPP_PASSWORD }}
          MAIL_ARGV: ${{ secrets.MAIL_ARGV }}
          SENDER_NAME: ${{ secrets.SENDER_NAME }}
          SENDER_USERNAME: ${{ secrets.SENDER_USERNAME }}
          PASSWORD: ${{ secrets.PASSWORD }}
          receiver_name: ${{ secrets.receiver_name }}
          RECEIVER_USERNAME: ${{ secrets.RECEIVER_USERNAME }}
        run: |
          python program/自动续期.py
          if [ $? != 0 ];then
            python program/mail.py
            mail_status='续期失败，发送邮件'
          else
            mail_status='续期成功，不发送邮件'
          fi
          echo "PythonAnywhere自动续期任务结果： $mail_status"

          
